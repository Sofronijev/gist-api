{"version":3,"sources":["components/Header/Header.js","components/List/List.js","components/Pagination/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Header","List","pageNum","useState","isLoading","setIsLoading","listData","setListData","selectedRow","setSelectedRow","errorMsg","setErrorMsg","centerImage","useRef","useEffect","window","scrollTo","fetch","then","response","ok","json","Error","data","error","message","className","map","gist","fileNames","Object","keys","files","id","undefined","onClick","image","img","current","style","display","setTimeout","changeSelectedRow","owner","avatar_url","src","alt","displayGists","ref","Pagination","setPageNum","type","currNum","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGe,SAASA,IACpB,OACI,iCACI,yC,MCHG,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAAW,EAEJC,oBAAS,GAFL,mBAE/BC,EAF+B,KAEpBC,EAFoB,OAGNF,mBAAS,IAHH,mBAG/BG,EAH+B,KAGrBC,EAHqB,OAIAJ,mBAAS,IAJT,mBAI/BK,EAJ+B,KAIlBC,EAJkB,OAKNN,mBAAS,IALH,mBAK/BO,EAL+B,KAKrBC,EALqB,KAMhCC,EAAcC,iBAAO,MAG3BC,qBAAU,WAENT,GAAa,GAEbU,OAAOC,SAAS,EAAG,GACnBC,MAAM,wDAAD,OAAyDf,EAAzD,gCACAgB,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAGhB,MAAM,IAAIC,MAAM,2BAGvBJ,MAAK,SAAAK,GACFhB,EAAYgB,GACZlB,GAAa,MAEb,SAACmB,GACGnB,GAAa,GACbM,EAAYa,QAIzB,CAACtB,IAmCJ,OAAIQ,EACO,4BAAIA,EAASe,UAIpB,iCACKrB,EACG,mBAAGsB,UAAU,UAAb,wBACA,6BA5BS,WACjB,IAAKtB,EACD,OAAOE,EAASqB,KAAI,SAAAC,GAEhB,IAAMC,EAAYC,OAAOC,KAAKH,EAAKI,OAAO,GAC1C,OAAO,qBAEHN,UAAWlB,EAAYyB,KAAOL,EAAKK,GAAK,gBAAaC,EACrDC,QAAS,kBArBC,SAACF,EAAIG,GAC3B3B,EAAe,CAAEwB,KAAIG,UAErB,IAAMC,EAAMzB,EAAY0B,QACxBD,EAAIE,MAAMC,QAAU,QACpBH,EAAIX,UAAYW,EAAIX,UAAY,eAChCe,YAAW,WACPJ,EAAIX,UAAY,YAChBW,EAAIE,MAAMC,QAAU,SACrB,KAYwBE,CAAkBd,EAAKK,GAAIL,EAAKe,MAAMC,aAHlD,UAIH,qBACIC,IAAKjB,EAAKe,MAAMC,WAChBE,IAAI,eAGR,+BAAOjB,MARFD,EAAKK,OAuBTc,KAET,qBACIC,IAAKpC,EACLiC,IAAKrC,EAAY4B,MACjBU,IAAI,aACJpB,UAAW,iB,MCnFZ,SAASuB,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WAUjC,OACI,sBAAKxB,UAAU,aAAf,UACI,wBAAQyB,KAAK,SAAShB,QANb,WAEbe,GAAW,SAAAE,GAAO,OAAgB,IAAZA,EAAgB,EAAIA,EAAU,MAIhD,oBACA,wBAAQD,KAAK,SAAShB,QAXb,WAEbe,GAAW,SAAAE,GAAO,OAAgB,MAAZA,EAAkB,IAAMA,EAAU,MASpD,uBCOGC,MAjBf,WAAgB,IAAD,EACiBlD,mBAAS,GAD1B,mBACND,EADM,KACGgD,EADH,KAEb,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACExB,QAASA,EACTgD,WAAYA,IAEd,cAAC,EAAD,CACEhD,QAASA,EACTgD,WAAYA,QCLLI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.09a64f5a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <h5>Gists</h5>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport './List.scss'\r\n\r\nexport default function List({ pageNum }) {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [listData, setListData] = useState([])\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n    const centerImage = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        //setLoading between pages\r\n        setIsLoading(true)\r\n        //scroll to the top off the page when page changes\r\n        window.scrollTo(0, 0)\r\n        fetch(`https://api.github.com/gists/public?per_page=30&page=${pageNum}&since=2021-04-18T07:35:13Z`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                } else {\r\n                    // error if API rate limit exceeded\r\n                    throw new Error(\"Something went wrong\")\r\n                }\r\n            })\r\n            .then(data => {\r\n                setListData(data)\r\n                setIsLoading(false)\r\n            },\r\n                (error) => {\r\n                    setIsLoading(false)\r\n                    setErrorMsg(error)\r\n                }\r\n            )\r\n\r\n    }, [pageNum])\r\n\r\n    const changeSelectedRow = (id, image) => {\r\n        setSelectedRow({ id, image })\r\n        //shows animation and removes element after 1 s\r\n        const img = centerImage.current\r\n        img.style.display = \"block\"\r\n        img.className = img.className + \" animateFade\"\r\n        setTimeout(() => {\r\n            img.className = \"fadeImage\"\r\n            img.style.display = \"none\"\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    const displayGists = () => {\r\n        if (!isLoading) {\r\n            return listData.map(gist => {\r\n                //using only first file in files object name\r\n                const fileNames = Object.keys(gist.files)[0]\r\n                return <li\r\n                    key={gist.id}\r\n                    className={selectedRow.id === gist.id ? \"selected\" : undefined}\r\n                    onClick={() => changeSelectedRow(gist.id, gist.owner.avatar_url)} >\r\n                    <img\r\n                        src={gist.owner.avatar_url}\r\n                        alt=\"avatar_img\"\r\n                    >\r\n                    </img>\r\n                    <span>{fileNames}</span>\r\n                </li>\r\n            })\r\n        }\r\n    }\r\n\r\n    if (errorMsg) {\r\n        return <p>{errorMsg.message}</p>\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            {isLoading ?\r\n                <p className=\"loading\">Loading...</p> :\r\n                <ul>\r\n                    {displayGists()}\r\n                </ul>}\r\n            <img\r\n                ref={centerImage}\r\n                src={selectedRow.image}\r\n                alt=\"avatar_img\"\r\n                className={\"fadeImage\"}\r\n            >\r\n            </img>\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Pagination.scss'\r\n\r\nexport default function Pagination({ setPageNum }) {\r\n\r\n    const nextPage = () => {\r\n        //For 30 rows per page, max number of pages are 100\r\n        setPageNum(currNum => currNum === 100 ? 100 : currNum + 1)\r\n    }\r\n    const prevPage = () => {\r\n        //Page number can't be 0 or negative number\r\n        setPageNum(currNum => currNum === 1 ? 1 : currNum - 1)\r\n    }\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button type=\"button\" onClick={prevPage}>&#8249;</button>\r\n            <button type=\"button\" onClick={nextPage}>&#8250;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useState } from 'react'\nimport './App.scss'\nimport Header from './components/Header/Header'\nimport List from './components/List/List'\nimport Pagination from './components/Pagination/Pagination'\n\nfunction App() {\n  const [pageNum, setPageNum] = useState(2)\n  return (\n    <div className=\"App\">\n      <Header />\n      <List\n        pageNum={pageNum}\n        setPageNum={setPageNum}\n      />\n      <Pagination\n        pageNum={pageNum}\n        setPageNum={setPageNum}\n      />\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}